# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- master

pool:
  vmImage: 'Ubuntu-16.04'

variables:
  buildConfiguration: 'Release'
  functionAppName: 'mthcricket01api'
  serviceNamespace: 'Mth.Darts.Cricket'

steps:
- script: dotnet --version
  displayName: 'Get agent dotnet version'
# - task: DotNetCoreInstaller@0
#   inputs:
#     version: '2.2.101'
- script: dotnet build '$(serviceNamespace)' --configuration $(buildConfiguration)
  displayName: 'Build Service (Class Library)'
- script: dotnet build '$(serviceNamespace).Tests' --configuration $(buildConfiguration)
  displayName: 'Build Service tests'
- task: DotNetCoreCLI@2
  inputs:
    command: test
    projects: '$(serviceNamespace).Tests/*.csproj'
    arguments: '--configuration $(buildConfiguration) --collect "Code coverage"'
  displayName: 'Test Service'
- script: dotnet build '$(serviceNamespace).Api' --configuration $(buildConfiguration)
  displayName: 'Build API (Azure Function App)'
- script: dotnet build '$(serviceNamespace).Api.Tests' --configuration $(buildConfiguration)
  displayName: 'Build API tests'
- task: DotNetCoreCLI@2
  inputs:
    command: test
    projects: '$(serviceNamespace).Api.Tests/*.csproj'
    arguments: '--configuration $(buildConfiguration) --collect "Code coverage"'
  displayName: 'Test API'
- script: dotnet publish '$(serviceNamespace).Api' --output $(Build.ArtifactStagingDirectory)/$(functionAppName)
  displayName: 'Publish Build artifacts'
- task: PublishBuildArtifacts@1 # To be replaced by PublishPipelineArtifact early 2019
  inputs:
    pathtoPublish: $(Build.ArtifactStagingDirectory)
    artifactName: $(functionAppName)
    artifactType: filepath
# - task: PublishPipelineArtifact@0
#   inputs:
#     artifactName: CricketApi
#     targetPath: ./$(serviceNamespace).Api