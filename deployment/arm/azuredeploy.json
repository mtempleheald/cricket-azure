{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "Location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Location for all resources."
            }
        },
        "StorageAccountType": {
            "type": "string",
            "defaultValue": "Standard_LRS",
            "allowedValues": [
                "Standard_LRS",
                "Standard_GRS",
                "Standard_ZRS",
                "Premium_LRS"
            ],
            "metadata": {
                "description": "Storage Account type"
            }
        },
        "Environmentironment": {
            "type": "string",
            "defaultValue": "PRD",
            "allowedValues": [
                "PRD"
            ]
        }
    },
    "variables": {
        "ApplicationName": "[resourceGroup().name]",
        "NestedTemplateDir": "https://raw.githubusercontent.com/mtempleheald/cricket-azure/master/deployment/arm/",
        "DeploymentDebugDetailLevel": "requestContent, responseContent",
        "Environment": "[variables(concat(parameters('Environmentironment'),'Environment'))]",
        "PRDEnvironment": {
            "ApiStorage": {
                "Deploy": "True",
                "TemplateUri": "[uri(variables('NestedTemplateDir'), 'storage.json')]",
                "Location": "[parameters('Location')]",
                "Type": "Standard_LRS",
                "Kind": "Storage",
                "Name": "[concat(variables('ApplicationName'), 'apistorage')]",
                "Purpose": "Azure functions require storage for source code, logging, diagnostics"
            },
            "FunctionApp": {
                "Deploy": "True",
                "TemplateUri": "[uri(variables('NestedTemplateDir'), 'functionapp.json')]",
                "Location": "[parameters('Location')]",
                "FunctionAppName": "[concat(variables('ApplicationName'), 'api')]",
                "FunctionsExtensionVersion": "~2",
                "FunctionsWorkerRuntime": "dotnet",
                "FrontEndUri": "[concat('https://', variables('ApplicationName'), 'ui', '.z6.web.core.windows.net')]"
            },
            "AppInsights": {
                "Deploy": "True",
                "TemplateUri": "[uri(variables('NestedTemplateDir'), 'insights.json')]",
                "Location": "[parameters('Location')]",
                "Name": "[concat(variables('ApplicationName'), 'apiinsights')]",
                "FunctionAppName": "[concat(variables('ApplicationName'), 'api')]"
            },
            "UiStorage": {
                "Deploy": "True",
                "TemplateUri": "[uri(variables('NestedTemplateDir'), 'storage.json')]",
                "Location": "[parameters('Location')]",
                "Type": "Standard_LRS",
                "Kind": "StorageV2",
                "Name": "[concat(variables('ApplicationName'), 'ui')]",
                "Purpose": "$web container holds all static web content"
            }
        }
    },
    "resources": [
        {
            "condition": "[equals(variables('Environment').ApiStorage.Deploy, 'True')]",
            "name": "ApiStorageDeploy",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2018-05-01",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('Environment').ApiStorage.TemplateUri]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "Location": {"value": "[variables('Environment').ApiStorage.Location]"},
                    "Type": {"value": "[variables('Environment').ApiStorage.Type]"},
                    "Kind": {"value": "[variables('Environment').ApiStorage.Kind]"},
                    "Name": {"value": "[variables('Environment').ApiStorage.Name]"},
                    "Purpose": {"value": "[variables('Environment').ApiStorage.Purpose]"}
                },
                "debugSetting": {
                    "detailLevel": "[variables('DeploymentDebugDetailLevel')]"
                }
            }
        },
        {
            "condition": "[equals(variables('Environment').AppInsights.Deploy, 'True')]",
            "name": "AppInsightsDeploy",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2018-05-01",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('Environment').AppInsights.TemplateUri]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "Location": {"value": "[variables('Environment').AppInsights.Location]"},
                    "Name": {"value": "[variables('Environment').AppInsights.Name]"}
                },
                "debugSetting": {
                    "detailLevel": "[variables('DeploymentDebugDetailLevel')]"
                }
            }
        },
        {
            "condition": "[equals(variables('Environment').FunctionApp.Deploy, 'True')]",
            "name": "FunctionAppDeploy",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2018-05-01",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('Environment').FunctionApp.TemplateUri]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "Location": {"value": "[variables('Environment').FunctionApp.Location]"},
                    "FunctionAppName": {"value": "[variables('Environment').FunctionApp.FunctionAppName]"},
                    "FunctionsExtensionVersion": {"value": "[variables('Environment').FunctionApp.FunctionsExtensionVersion]"},
                    "FunctionsWorkerRuntime": {"value": "[variables('Environment').FunctionApp.FunctionsWorkerRuntime]"},
                    "StorageAccountConnectionString": {"value": "[reference('ApiStorageDeploy').outputs.ConnectionString.value]"},
                    "AppInsightsKey": {"value": "[reference('AppInsightsDeploy').outputs.Key.value]"},
                    "FrontEndUri": {"value": "[variables('Environment').FunctionApp.FrontEndUri]"}
                },
                "debugSetting": {
                    "detailLevel": "[variables('deploymentDebugDetailLevel')]"
                }
            },
            "dependsOn": [
                "ApiStorageDeploy",
                "AppInsightsDeploy"
            ]
        },
        {
            "condition": "[equals(variables('Environment').ApiStorage.Deploy, 'True')]",
            "name": "UiStorageDeploy",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2018-05-01",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('Environment').UiStorage.TemplateUri]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "Location": {"value": "[variables('Environment').UiStorage.Location]"},
                    "Type": {"value": "[variables('Environment').UiStorage.Type]"},
                    "Kind": {"value": "[variables('Environment').UiStorage.Kind]"},
                    "Name": {"value": "[variables('Environment').UiStorage.Name]"},
                    "Purpose": {"value": "[variables('Environment').UiStorage.Purpose]"}
                },
                "debugSetting": {
                    "detailLevel": "[variables('DeploymentDebugDetailLevel')]"
                }
            }
        }
    ],
    "outputs": {}
}